buildscript {
    dependencies {
        classpath 'org.hidetake:gradle-ssh-plugin:2.10.1'
    }
}
plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'jacoco-report-aggregation'
    id 'xperp'
}

group = 'com.xperp.clothing'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '16'

apply from: "$path/../../gradle/config/scripts/junit.gradle"
apply from: "$path/../../gradle/config/scripts/style.gradle"
apply from: "$path/../../gradle/config/scripts/publishToTest.gradle"
dependencies {
    implementation project(":domains")
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'com.github.bobdeng:spring-rbac:1.0.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.github.jsqlparser:jsqlparser:4.5'

}

tasks.named('test') {
    systemProperty 'webdriver', System.getProperty('webdriver')
    useJUnitPlatform()
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
            ])
        }))
    }
}
tasks.named('check') {
    dependsOn tasks.named('testCodeCoverageReport', JacocoReport)
}
bootJar {
    archiveFileName = "mainserver.jar"
}
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 1.0
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification
check.dependsOn checkstyleMain
bootJar.dependsOn check